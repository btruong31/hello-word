let rotationAngle = 0;
let shape = 'star'; // Initial shape
let shapeChangeInterval = 1000; // Time interval for shape change (milliseconds)
let lastShapeChangeTime = 0;
let spinning = false;

function setup() {
  createCanvas(400, 400);
  background(255); // White background
}

function draw() {
  translate(width / 2, height / 2); // Move the origin to the center

  let radius = 100; // Default radius for shapes
  
  // Clear the background
  background(255);
  
  // Apply rotation if spinning is true
  if (spinning) {
    rotationAngle += 0.01;
  }

  // Apply rotation
  rotate(rotationAngle);

  if (shape === 'star') {
    drawStar(radius);
  } else if (shape === 'rectangle') {
    drawRectangle(radius * 2); // Double the radius for rectangle's width
  } else if (shape === 'circle') {
    drawCircle(radius);
  } else if (shape === 'triangle') {
    drawTriangle(radius);
  }
  
  // Check for shape change
  if (millis() - lastShapeChangeTime > shapeChangeInterval) {
    changeShape();
    lastShapeChangeTime = millis();
  }
}

function drawStar(radius) {
  let numVertices = 10; // Number of vertices in the star
  let angleIncrement = TWO_PI / numVertices;
  beginShape();
  for (let i = 0; i < numVertices * 2; i++) {
    let currentRadius = i % 2 === 0 ? radius : radius / 2; // Alternating radii
    let angle = i * angleIncrement;
    let x = currentRadius * cos(angle);
    let y = currentRadius * sin(angle);
    vertex(x, y);
  }
  endShape(CLOSE);
}

function drawRectangle(diameter) {
  rectMode(CENTER);
  rect(0, 0, diameter, diameter);
}

function drawCircle(radius) {
  ellipse(0, 0, radius * 2);
}

function drawTriangle(sideLength) {
  beginShape();
  vertex(0, -sideLength / 2);
  vertex(-sideLength * sqrt(3) / 2, sideLength / 2);
  vertex(sideLength * sqrt(3) / 2, sideLength / 2);
  endShape(CLOSE);
}

function changeShape() {
  let shapes = ['star', 'rectangle', 'circle', 'triangle'];
  let currentShapeIndex = shapes.indexOf(shape);
  let nextShapeIndex = (currentShapeIndex + 1) % shapes.length;
  shape = shapes[nextShapeIndex];
}

function mouseClicked() {
  // Toggle spinning
  spinning = !spinning;
}
